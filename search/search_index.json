{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>test# Trigger rebuild</p>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/","title":"\ud83d\udee0\ufe0f How To: Proxmox PCI/GPU Passthrough","text":"<p>\ud83d\udc64 Author: Dwayne Black \ud83d\udcc5 Date: 16 Oct 25 \ud83d\udccc Version: 01.2025</p>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#overview","title":"\ud83d\udcd6 Overview","text":"<p>PCI passthrough allows you to use a physical PCI device (graphics card, network card) inside a VM (KVM virtualization only).</p> <p>If you \"PCI passthrough\" a device, the device is not available to the host anymore. Note that VMs with passed-through devices cannot be migrated.</p> <p>Good for Gfx cards passthrough direct to Plex/Jellyfin VM for transcoding etc.</p>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#table-of-contents","title":"\ud83d\udcd1 Table of Contents","text":"<ul> <li>\ud83d\udcd6 Overview</li> <li>\ud83d\udccb Prerequisites</li> <li>\ud83e\udde9 Step-by-Step Guide</li> <li>\ud83d\udd27 Step 1: {{Prepare BIOS}}</li> <li>\ud83d\udd27 Step 2: {{Step Title}}</li> <li>\ud83d\udd27 Step 3: {{Step Title}}</li> <li>\ud83d\udd27 Step 4: {{Step Title}}</li> <li>\u2757 Troubleshooting</li> <li>\ud83d\udcda Resources</li> <li>\ud83d\udd04 Revision History</li> <li>\ud83d\udcdd Additional Notes</li> </ul>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#prerequisites","title":"\ud83d\udccb Prerequisites","text":"\ud83d\udce6 Item \ud83d\udcd6 Description \ud83d\udd22 Version Proxmox VE proxmox virtual environment 9.0 Motherboard VT-d/IOMMU capable Motherboard PCI device SAS HBA, Gfx Card Quick Reference https://pve.proxmox.com/wiki/PCI_Passthrough Original Guide HSVE Guide Thank you!!"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#step-by-step-guide","title":"\ud83e\udde9 Step-by-Step Guide","text":""},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#step-1-prepare-bios","title":"Step 1: Prepare BIOS","text":"<p>This prep is required to ensure that your system is compatible with 'passthrough' and you have the best chance of success. if possible, start by ensuring your BIOS firmware is up to date!</p>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#bios-enabledisable","title":"\u25b6\ufe0f BIOS Enable/Disable:","text":"<p>\u2705 Enable SVM/Virtualization Mode</p> <p>\u2705 Enable VT-d _Required for passthrough to work at all</p> <p>\u2705 Enable SR-IOV If present.</p> <p>\ud83d\uded1  Disable CSM/Legacy Boot</p> <p>\u2705 Enable ACS If present, set to Enabled (Auto doesn\u2019t work).</p> <p>\u2705 Set PEG {NUMBER} ASPM to L0 or L0sL1 Set whichever amount you've got to mentioned, if L0 is present, pick that.</p> <p>\u2705 Enable 4G Decoding</p> <p>\ud83d\uded1  Disable Resizable BAR/Smart Access Memory You might experience \u2018Code 43 error\u2019 if enabled.</p> <p>\u2705 Enable IOMMU _If present, mostly for AMD boards;</p> <p>\u2705 Set Primary Display to CPU/iGPU If your CPU has an iGPU, if not skip this.</p> <p>\u2705 Set Pre-Allocated Memory to 64M If your CPU has an iGPU, if not skip this too.</p> <p>[!ATTENTION] This step is not necessary for the passthrough, but helps keeping things clean. For ignoring some annoying \u201cwarnings\u201d in your\u00a0<code>dmesg</code>\u00a0output, do the following:</p> <p>\u26a0\ufe0f Attention: This step is not necessary for the passthrough, but helps keeping things clean. For ignoring some annoying \u201cwarnings\u201d in your\u00a0<code>dmesg</code>\u00a0output, do the following:</p> \u26a0\ufe0f Attention: This step is not necessary for the passthrough, but helps keeping things clean. For ignoring some annoying \"warnings\" in your dmesg output, do the following:  <p>Attention</p> <p>This step is not necessary for the passthrough, but helps keeping things clean. For ignoring some annoying \"warnings\" in your dmesg output, do the following:</p> <p>Open: <pre><code>nano /etc/modprobe.d/kvm.conf\n</code></pre></p> <p>Add the following line: <pre><code>options kvm ignore_msrs=Y report_ignored_msrs=0\n</code></pre></p>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#step-2-setting-the-boot-arguments","title":"\ud83d\udd27 Step 2: Setting the Boot Arguments","text":""},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#for-intel-cpus","title":"For\u00a0Intel\u00a0CPUs","text":"<p>For\u00a0GRUB; Replace the current similar line with this one in your grub file: <pre><code>nano /etc/default/grub\n</code></pre></p> <p>Make these changes to that file: <pre><code>GRUB_CMDLINE_LINUX_DEFAULT=\"quiet intel_iommu=on iommu=pt initcall_blacklist=sysfb_init\"\n</code></pre></p> <p>[!ATTENTION] This config is from a youtube video which seemed to work and display \"IOMMU Enabled\" when checking as well. <code>GRUB_CMDLINE_LINUX_DEFAULT=\"quiet intel_iommu=on iommu=pt intel_pstate=disable</code></p> <p>Hit\u00a0Ctrl + X \u2192 Y \u2192 Enter\u00a0to save changes.</p>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#for-amd-cpus","title":"For\u00a0AMD\u00a0CPUs","text":"<p>For\u00a0GRUB; Replace the current similar line with this one in your grub file: <pre><code>nano /etc/default/grub\n</code></pre></p> <p>Make these changes to that file: <pre><code>GRUB_CMDLINE_LINUX_DEFAULT=\"quiet iommu=pt initcall_blacklist=sysfb_init\"\n</code></pre></p> <p>Hit\u00a0Ctrl + X \u2192 Y \u2192 Enter\u00a0to save changes.</p> <p>[!ATTENTION] Your system might not be relying on Grub, but\u00a0systemd\u00a0instead. This is often the case when you\u2019re using\u00a0ZFS.  So for\u00a0systemd:</p>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#intel-cpus-systemdzfs","title":"Intel CPUs (Systemd/ZFS)","text":"<pre><code>nano /etc/kernel/cmdline\n</code></pre> <pre><code>root=ZFS=rpool/ROOT/pve-1 boot=zfs intel_iommu=on iommu=pt initcall_blacklist\n=sysfb_init\n</code></pre>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#amd-cpus-systemdzfs","title":"AMD CPUs (Systemd/ZFS)","text":"<pre><code>nano /etc/kernel/cmdline\n</code></pre> <pre><code>GRUB_CMDLINE_LINUX_DEFAULT=\"quiet iommu=pt initcall_blacklist=sysfb_init\"\n</code></pre> <p>For\u00a0Grub\u00a0only: <pre><code>update-grub\n</code></pre></p> <p>For\u00a0Systemd\u00a0only: <pre><code>pve-efiboot-tool refresh\n</code></pre></p> <p>Reboot to commit changes with: <pre><code>reboot\n</code></pre></p>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#step-3-configuring-iommu","title":"\u270d\ufe0f Step 3: Configuring IOMMU","text":"<p>Once the host is up and running again we need to check if IOMMU is enabled and working. We can do this by running the following commands.</p> <p>For\u00a0Intel: <pre><code>dmesg | grep -e DMAR -e IOMMU\n</code></pre></p> <p>For\u00a0AMD: <pre><code>dmesg | grep -e DMAR -e IOMMU -e AMD-Vi\n</code></pre></p> <p>If there's no output you've done something wrong, please retrace your steps: You should be seeing something like this: \"DMAR: IOMMU Enabled\"</p> <p>The next step is enabling the modules required for GPU passthrough: Enable the necessary modules by running the following command:</p> <pre><code>nano /etc/modules\n</code></pre> <p>Add the following lines to this file: <pre><code>vfio\nvfio_iommu_type1\nvfio_pci\n</code></pre></p> <p>Hit\u00a0Ctrl\u00a0+\u00a0X\u00a0&gt;\u00a0Y Enter\u00a0to Save changes.</p> <p>After changing the following modules you need to refresh your initramfs with the following command: <pre><code>update-initramfs -u -k all\n</code></pre></p> <p>Lets check if remapping has been enabled with the following command: <pre><code>dmesg | grep remapping\n</code></pre></p> <p>You should see something like \"Interrupt remapping enabled / IRQ Remapping Enabled\"</p> <p>If your system doesn't support Remapping you can run this command to enable remapping.\u00a0However please be aware that this option could make your system unstable. <pre><code>nano /etc/modprobe.d/iommu_unsafe_interrupts.conf\n</code></pre></p> <p>Add the following line: <pre><code>options vfio_iommu_type1 allow_unsafe_interrupts=1\n</code></pre></p> <p>Hit\u00a0Ctrl\u00a0+\u00a0X\u00a0&gt;\u00a0Y\u00a0&gt;\u00a0Enter\u00a0to save your changes.</p>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#step-4-blacklisting-driver-modules","title":"\ud83d\ude80 Step 4: Blacklisting Driver modules","text":"<p>Blacklisting driver modules to give VM full access to Hardware. <pre><code>nano /etc/modprobe.d/pve-blacklist.conf \n</code></pre></p> <p>Add: <pre><code>blacklist nouveau\nblacklist nvidia\nblacklist nvidiafb\nblacklist snd_hda_codec_hdmi\nblacklist snd_hda_intel\nblacklist snd_hda_codec\nblacklist snd_hda_core\nblacklist radeon\nblacklist amdgpu\n</code></pre></p> <p>Hit\u00a0Ctrl\u00a0+\u00a0X\u00a0&gt;\u00a0Y\u00a0&gt;\u00a0Enter</p>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#adding-device-ids-to-blacklist","title":"Adding Device ID's to Blacklist","text":"<p>To find the corresponding IDs for your PCI devices run the following command: Replace {device} = vga,usb,audio,wireless,sas etc. <pre><code>lspci -nn | grep -i {device}\n</code></pre></p> <p>You will see an output similar to the below screenshot:</p> <p>![[device id.png]]</p> <p>As you can see the IDs of the GPU above are\u00a010de:1287\u00a0and\u00a01002:67d.</p> <p>You may decide you want to find the IDs of your USB controllers too just in case you need to whitelist these down the line due to issues.</p> <p>To blacklist the devices from use by Proxmox and full access use to your VM run the following commands.</p> <pre><code>nano /etc/modprobe.d/vfio-pci.conf\n</code></pre> <p>Add the device IDs in the blank file like this: <pre><code>options vfio-pci ids=1234:5678,1234:5678 disable_vga=1\n</code></pre></p> <p>Replacing the\u00a01234:5678\u00a0with your actual IDs, if you only have 1 GPU remove the other IDs from the command.</p> <p>Example: <pre><code>options vfio-pci ids=10de:1287 disable_vga=1\n</code></pre></p> <p>You can also add\u00a0disable_idle_d3=1\u00a0to the end of the line to disable the D3 device power state which will prevent certain hardware from entering low power mode, which can cause issues when passed through to VMs.</p> <p>Hit\u00a0Ctrl\u00a0+\u00a0X\u00a0&gt;\u00a0Y\u00a0&gt;\u00a0Enter\u00a0to save changes.</p> <p>Once all of the above is sorted reboot your machine once again with the command below: <pre><code>reboot\n</code></pre></p>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#step-4-adding-devices-to-you-vm","title":"\u23f3 Step 4: Adding devices to you VM","text":"<p>(Coming Soon!)</p>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#troubleshooting","title":"\u2757 Troubleshooting","text":"\ud83d\udea8 Issue \ud83d\udccb Description \u2705 Possible Solution"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#resources","title":"\ud83d\udcda Resources","text":"<ul> <li>\ud83d\udcd6 Original Guide that worked!</li> <li>\ud83d\udd17 Proxmox Wiki on PCI passthrough</li> <li>\ud83d\udd16 Proxmox VW Administration Guide</li> <li>\ud83c\udfa5 Tutorial Video - 10 Oct 2025</li> </ul>"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#revision-history","title":"\ud83d\udd04 Revision History","text":"\ud83d\udcc5 Date \ud83d\udd16 Version \ud83d\udc64 Author \ud83d\udcdd Changes / Notes 16 Oct 2025 2025.01 Dwayne Black Initial draft"},{"location":"proxmox/PROXMOX-PCI%20Passthrough/#additional-notes","title":"\ud83d\udcdd Additional Notes","text":"<p>Nothing of importance to note just yet.</p>"}]}